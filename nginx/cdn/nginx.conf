user  CiscoMoeCDN CiscoMoeCDN;
worker_processes 20;

error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid        logs/nginx.pid;


events {
    use epoll;
    worker_connections  1024;
    multi_accept on;
}


http {

    server_tokens off;

    resolver 192.168.0.3 192.168.0.4 101.6.6.6 ipv6=off;

    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    keepalive_timeout  120;

    gzip on;
    gzip_disable "msie6";
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_comp_level 9;

    brotli on;
    brotli_comp_level 11;
    brotli_static off;
    brotli_buffers 16 8k;
    brotli_window 512k;
    brotli_min_length 20; 
    brotli_types 
        text/plain
        text/javascript
        text/css
        text/xml
        text/x-component
        application/javascript
        application/x-javascript
        application/xml
        application/json
        application/xhtml+xml
        application/rss+xml
        application/atom+xml
        application/x-font-ttf
        application/vnd.ms-fontobject
        image/svg+xml
        image/x-icon
        font/opentype;


    server {
        listen 80 default_server;
        listen [::]:80 default_server;

        server_name localhost cdn.cisco.moe cf.cdn.cisco.moe;
        charset utf-8;

        root /sdb1/CiscoMoeCDN/cdnroot;

        #SSL
        listen 443 ssl http2;
        ssl_certificate /etc/letsencrypt/live/cdn.cisco.moe/cert.pem;
        ssl_certificate_key /etc/letsencrypt/live/cdn.cisco.moe/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/cdn.cisco.moe/chain.pem;
        ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
        ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5:!aNULL:!eNULL:!NULL:!DH:!EDH:!AESGCM;
        ssl_prefer_server_ciphers on;
        ssl_session_timeout 10m;
        ssl_session_cache builtin:1000 shared:SSL:10m;
        ssl_buffer_size 1400;
        #add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload";
        ssl_stapling on;
        ssl_stapling_verify on;

        #access_log  logs/host.access.log  main;
        index index.html index.htm;
        add_header 'Access-Control-Allow-Origin' '*';

        location ^~ /api {
           fastcgi_read_timeout 300;
           fastcgi_pass unix:/run/CiscoMoeCDN-php.socket;
           include fastcgi_params;
           fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        }
        
        location ^~ /status {
           stub_status; 
        }

       #屏蔽源码
       location ~ \.(php|jsp|asp|aspx)$ {
            deny all;
       }

       location ~ /\.ht {
            deny  all;
       }

       #防盗链
       location ~ ^(^/([a-zA-Z.]*))(.*) {
               set $req_domain $2;
               set $req_path $3;
               try_files $uri @backtosource;

               #读Referer
               if ($http_referer ~ (http|https)://([^/:]*)/?) {
                       set $ref_domain $2;
               }
               #读Origin
               if ($http_origin ~ (http|https)://([^/:]*)/?) {
                       set $ori_domain $2;
               }

               #设置flag
               set $pass "";
               if ($ref_domain = $req_domain) { set $pass "${pass}0"; }
               #if ($ori_domain = $req_domain) { set $pass "${pass}1"; }  #部分请求会出现Referer为cdn域名，Origin为源站域名
               if ($ref_domain = $host) { set $pass "${pass}2"; } 

               #判断flag
               if ($pass !~ [0|1|2]){
                       return 403 "host: $host\r\nflag: $pass\r\nreq_domain: $req_domain\r\nref_domain: $ref_domain\r\nori_domain: $ori_domain";
               }
       }
       #回源
       location @backtosource {
               proxy_ssl_server_name on;
               proxy_ssl_name $req_domain;
               proxy_ssl_session_reuse on;
               proxy_ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
               proxy_set_header X-Return-Source $req_domain;
               proxy_set_header X-Real-IP $remote_addr;
               proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
               proxy_set_header X-Forwarded-Proto $scheme;
               proxy_pass $scheme://$req_domain$req_path;
        }

        location / {
            expires 30d;
            #access_log off;
        }
        location ~ .*\.(js|css)?$ {
            expires 7d;
            #access_log off;
        }
    }

    ssl_session_cache    shared:SSL:10m;
    ssl_session_timeout  10m;

}
